name: RTD Build Documentation Docker

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  docs:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Docker cache
        uses: actions/cache@v3
        with:
          path: /tmp/.docker
          key: ${{ runner.os }}-docker-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Set up Docker config for caching
        run: |
          mkdir -p ~/.docker
          echo '{"registry-mirrors": ["https://mirror.gcr.io"]}' > ~/.docker/config.json

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Pull and cache Docker image
        run: |
          DOCKER_CACHED_IMAGE=$(docker load -i /tmp/.docker/readthedocs-build-latest.tar || echo "no_cache")
          if [ "$DOCKER_CACHED_IMAGE" = "no_cache" ]; then
            docker pull readthedocs/build:latest
            docker save readthedocs/build:latest -o /tmp/.docker/readthedocs-build-latest.tar
          fi


      - name: Set up secrets
        env:
          BOX_CLIENT_ID: ${{ secrets.BOX_CLIENT_ID }}
          BOX_CLIENT_SECRET: ${{ secrets.BOX_CLIENT_SECRET }}
          BOX_ENTERPRISE_ID: ${{ secrets.BOX_ENTERPRISE_ID }}
          BOX_PUBLIC_KEY_ID: ${{ secrets.BOX_PUBLIC_KEY_ID }}
          BOX_PRIVATE_KEY: ${{ secrets.BOX_PRIVATE_KEY }}
          BOX_PASSPHRASE: ${{ secrets.BOX_PASSPHRASE }}
        run: echo "Secrets configured"

      - name: Install dependencies
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/docs \
            -w /docs \
            -e BOX_CLIENT_ID="${{ secrets.BOX_CLIENT_ID }}" \
            -e BOX_CLIENT_SECRET="${{ secrets.BOX_CLIENT_SECRET }}" \
            -e BOX_ENTERPRISE_ID="${{ secrets.BOX_ENTERPRISE_ID }}" \
            -e BOX_PUBLIC_KEY_ID="${{ secrets.BOX_PUBLIC_KEY_ID }}" \
            -e BOX_PRIVATE_KEY="${{ secrets.BOX_PRIVATE_KEY }}" \
            -e BOX_PASSPHRASE="${{ secrets.BOX_PASSPHRASE }}" \
            readthedocs/build:latest \
            bash -c "pip3 install ."
            bash -c "pip3 install sphinx"
            bash -c "pip3 install -r docs/requirements.txt"

      - name: Build HTML Sphinx
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/docs \
            -w /docs \
            -e BOX_CLIENT_ID="${{ secrets.BOX_CLIENT_ID }}" \
            -e BOX_CLIENT_SECRET="${{ secrets.BOX_CLIENT_SECRET }}" \
            -e BOX_ENTERPRISE_ID="${{ secrets.BOX_ENTERPRISE_ID }}" \
            -e BOX_PUBLIC_KEY_ID="${{ secrets.BOX_PUBLIC_KEY_ID }}" \
            -e BOX_PRIVATE_KEY="${{ secrets.BOX_PRIVATE_KEY }}" \
            -e BOX_PASSPHRASE="${{ secrets.BOX_PASSPHRASE }}" \
            readthedocs/build:latest \
            bash -c "python3 -m sphinx -T -W --keep-going -b html -d _build/doctrees -D language=en . ./html"

      - name: Build HTML documentation
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/docs \
            -w /docs \
            -e BOX_CLIENT_ID="${{ secrets.BOX_CLIENT_ID }}" \
            -e BOX_CLIENT_SECRET="${{ secrets.BOX_CLIENT_SECRET }}" \
            -e BOX_ENTERPRISE_ID="${{ secrets.BOX_ENTERPRISE_ID }}" \
            -e BOX_PUBLIC_KEY_ID="${{ secrets.BOX_PUBLIC_KEY_ID }}" \
            -e BOX_PRIVATE_KEY="${{ secrets.BOX_PRIVATE_KEY }}" \
            -e BOX_PASSPHRASE="${{ secrets.BOX_PASSPHRASE }}" \
            readthedocs/build:latest \
            bash -c "sphinx-build -b html . _build/html"

      - name: Build PDF documentation
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/docs \
            -w /docs \
            -e BOX_CLIENT_ID="${{ secrets.BOX_CLIENT_ID }}" \
            -e BOX_CLIENT_SECRET="${{ secrets.BOX_CLIENT_SECRET }}" \
            -e BOX_ENTERPRISE_ID="${{ secrets.BOX_ENTERPRISE_ID }}" \
            -e BOX_PUBLIC_KEY_ID="${{ secrets.BOX_PUBLIC_KEY_ID }}" \
            -e BOX_PRIVATE_KEY="${{ secrets.BOX_PRIVATE_KEY }}" \
    
